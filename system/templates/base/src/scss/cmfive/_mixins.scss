@use "sass:map";

@mixin shadow-flat {
    box-shadow: 0px 4px 8px $shadow-light;
    // transition: box-shadow $animation-duration $animation-path;
    
    // &:hover {
    //     @include shadow-hover();
    // }
}

@mixin shadow-hover {
    box-shadow: 0px 16px 48px $shadow-light;
}

@mixin shadow-dark {
    box-shadow: 0px 4px 8px $shadow-dark;
    // transition: box-shadow $animation-duration $animation-path;
    
    // &:hover {
    //     @include shadow-hover();
    // }
}

@mixin font-size($size) {
    font-size: map.get($font-sizes, $size) !important;
    line-height: map.get($line-heights, $size) !important;
}

@mixin cleafix() {
    clear: both;
}

/**
 * @param map props - a map of properties to be themed
 * @param transitions - transitions to append
 */
@mixin theme($props, $t: null) {
    @each $theme, $map in $themes {
        .theme--#{$theme} & {
            $theme-map: () !global;
            // Build theme map
            @each $key, $submap in $map {
                $value: map-get(map-get($themes, $theme), '#{$key}');
                $theme-map: map-merge($theme-map, ($key: $value)) !global;
            }
            
            @each $prop, $target in $props {
                #{$prop}: map-get($theme-map, $target);
                $t: append($prop $animation-duration $animation-path',', $t);
            }
            transition: #{$t};
            $theme-map: null !global;
        }
    }
}
