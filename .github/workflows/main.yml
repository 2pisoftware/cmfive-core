name: CI

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop, master ]

  workflow_dispatch:

jobs:
  php-codesniffer:
    name: PHP CS
    runs-on: ubuntu-latest
    steps:
    - name: Get phpcs
      run: wget https://raw.githubusercontent.com/2pisoftware/cmfive-boilerplate/master/phpcs.xml
    - name: Codesniffer
      uses: pipeline-components/php-codesniffer@v0.12.3
      with:
        options: -s -p --colors --extensions=php --runtime-set testVersion 7.2
  run_test:
    # --------------------
    # Checkout Boilerplate
    # --------------------
    name: Unit/Acceptance tests
    runs-on: ubuntu-latest
    needs: [php-codesniffer]
    steps:      
      - uses: actions/checkout@v2
        with:
          repository: '2pisoftware/cmfive-boilerplate'
          ref: 'develop'

      # -----
      # Cache
      # -----
      - name: Cache Python Virtual Environment     
        uses: actions/cache@v2
        id: pip
        with:
          path: .build/setup/venv
          key: ${{ runner.os }}-pip-${{ hashFiles('.build/setup/requirements.txt') }}            

      - name: Cache cmfive Docker Image
        uses: actions/cache@v1
        id: cmfive-docker-image
        with:
          path: /tmp/docker-registry
          key: docker-registry-${{ hashFiles('.build/environment/test/config/docker/Dockerfile.template') }}

      # ------------------------------------
      # Pre-requsite Environment Setup Steps
      # ------------------------------------
      - name: Provision Python Virtual Environment
        if: steps.pip.outputs.cache-hit != 'true'
        run: |
          cd .build/setup;
          python3 -m venv venv;
          source venv/bin/activate;
          pip install -r requirements.txt;

      - name: Prepare cmfive Test Environment
        run: |          
          cd .build/setup;         
          source venv/bin/activate;          
          python install.py prime-environment test

      - name: Provision Temporary Docker Registry
        run: docker run -d -p 5000:5000 --restart=always --name registry -v /tmp/docker-registry:/var/lib/registry registry:2 && npx wait-on tcp:5000
      
      - name: Build cmfive Docker Image
        if: steps.cmfive-docker-image.outputs.cache-hit != 'true'
        run: |      
          docker pull localhost:5000/cmfive || true;
          docker build ./.build/environment/test/ -t cmfive --cache-from=localhost:5000/cmfive;
          docker tag cmfive localhost:5000/cmfive && docker push localhost:5000/cmfive || true;

      # - name: Setup cmfive test environment
      #   run: |          
      #     cd .build/setup          
      #     source venv/bin/activate;
      #     python install.py --verbose debug provision-test --cmfive_core_ref ${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}
      #     docker start selenium314

      
      # - name: Test cmfive
      #   run: |
      #     echo "Config::set('report.database', ['hostname' => 'mysql-5.7', 'username' => 'cmfive_test', 'password' => 'cmfive_test', 'database' => 'cmfive_test', 'driver' => 'mysql']);" >> config.php
      #     echo "Config::set('core_template.foundation.reveal.animation_speed', 0);" >> config.php
      #     echo "Config::set('core_template.foundation.reveal.animation', 'none');" >> config.php
      #     docker exec nginx-php7.4 bash -c "php cmfive.php cmfive help; exit \$?"
      #     docker exec nginx-php7.4 bash -c "php cmfive.php testDB setup; exit \$?"
      # - name: "Run admin module tests"
      #   run: |
      #     docker exec nginx-php7.4 bash -c "php cmfive.php tests module admin silent; exit \$?"
      #     if [ $? -gt 0 ]; then
      #       echo "Admin module tests failed"
      #     fi
      # - name: "Run auth module tests"
      #   run: |
      #     docker exec nginx-php7.4 bash -c "php cmfive.php tests module auth silent; exit \$?"
      #     if [ $? -gt 0 ]; then
      #       echo "Auth module tests failed"
      #     fi
      # - name: "Run channels module tests"
      #   run: |
      #     docker exec nginx-php7.4 bash -c "php cmfive.php tests module channels silent; exit \$?"
      #     if [ $? -gt 0 ]; then
      #       echo "Channels module tests failed"
      #     fi
      # - name: "Run favorite module tests"
      #   run: |
      #     docker exec nginx-php7.4 bash -c "php cmfive.php tests module favorite silent; exit \$?"
      #     if [ $? -gt 0 ]; then
      #       echo "Favorite module tests failed"
      #     fi
      # - name: "Run file module tests"
      #   run: |
      #     docker exec nginx-php7.4 bash -c "php cmfive.php tests module file silent; exit \$?"
      #     if [ $? -gt 0 ]; then
      #       echo "File module tests failed"
      #     fi
      # - name: "Run form module tests"
      #   run: |
      #     docker exec nginx-php7.4 bash -c "php cmfive.php tests module form silent; exit \$?"
      #     if [ $? -gt 0 ]; then
      #       echo "Form module tests failed"
      #     fi
      # - name: "Run help module tests"
      #   run: |
      #     docker exec nginx-php7.4 bash -c "php cmfive.php tests module help silent; exit \$?"
      #     if [ $? -gt 0 ]; then
      #       echo "Help module tests failed"
      #     fi
      # - name: "Run inbox module tests"
      #   run: |
      #     docker exec nginx-php7.4 bash -c "php cmfive.php tests module inbox silent; exit \$?"
      #     if [ $? -gt 0 ]; then
      #       echo "Inbox module tests failed"
      #     fi
      # - name: "Run main module tests"
      #   run: |
      #     docker exec nginx-php7.4 bash -c "php cmfive.php tests module main silent; exit \$?"
      #     if [ $? -gt 0 ]; then
      #       echo "Main module tests failed"
      #     fi
      # - name: "Run report module tests"
      #   run: |
      #     docker exec nginx-php7.4 bash -c "php cmfive.php tests module report silent; exit \$?"
      #     if [ $? -gt 0 ]; then
      #       echo "Report module tests failed"
      #     fi
      # - name: "Run search module tests"
      #   run: |
      #     docker exec nginx-php7.4 bash -c "php cmfive.php tests module search silent; exit \$?"
      #     if [ $? -gt 0 ]; then
      #       echo "Search module tests failed"
      #     fi
      # - name: "Run tag module tests"
      #   run: |
      #     docker exec nginx-php7.4 bash -c "php cmfive.php tests module tag silent; exit \$?"
      #     if [ $? -gt 0 ]; then
      #       echo "Tag module tests failed"
      #     fi
      # - name: "Run task module tests"
      #   run: |
      #     docker exec nginx-php7.4 bash -c "php cmfive.php tests module task silent; exit \$?"
      #     if [ $? -gt 0 ]; then
      #       echo "Task module tests failed"
      #     fi
      # - name: "Run timelog module tests"
      #   run: |
      #     docker exec nginx-php7.4 bash -c "php cmfive.php tests module timelog silent; exit \$?"
      #     if [ $? -gt 0 ]; then
      #       echo "Timelog module tests failed"
      #     fi
      # - name: Test results
      #   if: ${{ failure() }} || ${{ success() }}
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: test-output
      #     path: test/Codeception/tests/_output/
      #     retention-days: 5
